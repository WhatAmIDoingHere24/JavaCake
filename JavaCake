import javax.net.*;
import java.util.*;
import javax.security.*;
import java.io.*;
import javax.crypto.*;
import javax.swing.*;

/**JavaCake Docs
 * 
 * Java cake is a P2P messaging service made in java, the idea comes form Onion Tor (try and guess where i got the name)
 * 
 * Users are able to establish secure servers in which each user must provide a valid javaCake key to join
 * Users who establish servers must provide there public key pair to be cross refrenced on the website
 * all files shared must have a valid MD5 Hash to check
 * Users can set the amount of connections and who can/cannot connect
 * 
 */

public class JavaCake {
    public static void main(String[] args) {
        USER()
        {
        JFrame USER = new JFrame();
        JButton view_open_serv = new JButton(" VIEW ALL SERVERS ");
        JButton join_serv = new JButton(" JOIN SERVER ");
        JTextField username = new JTextField(" USERNAME ");
        JTextField key = new JTextField(" PUBLIC KEY ");

        USER.setSize(500,600);
        USER.setLayout(null);
        USER.setVisible(True);
        
        view_open_serv.setBounds(150,200,220,50);
        join_serv.setBounds(150,200,220,50);
        username.setBounds(150,200,220,50);
        key.setBounds(150,200,220,50);
        
        USER.add(view_open_serv);
        USER.add(join_serv);
        USER.add(username);
        USER.add(key);
    }

    SERVER(){
        JFrame SERVER = new JFrame();
        JButton  create_server = new JButton(" CREATE SERVER ");
        JButton stop_server = new JButton(" STOP SERVER ");
        JTextField server_name = new JTextField(" SERVER NAME ");
        JTextField server_key = new JTextField(" PUBLIC KEY ");
        JButton server_settings = new JButton(" SERVER SETTINGS ");

        USER.setSize(500,600);
        USER.setLayout(null);
        USER.setVisible(True);
        
        view_open_serv.setBounds(150,200,220,50);
        join_serv.setBounds(150,200,220,50);
        username.setBounds(150,200,220,50);
        key.setBounds(150,200,220,50);
        
        USER.add(view_open_serv);
        USER.add(join_serv);
        USER.add(username);
        USER.add(key);
    }

    SERVER_SETTINGS(){
        JFrame SERVER_SETTINGS = new JFrame();
        /*SERVER SETTINGS
         * server join limit
         * ip white list
         * ip black list
         * public or private server
         * logging level 0-3 (0 = no logging,1 = log usernames/join/exit times,2 = log 1+only txt message,3 = log everything)
         * allow attachments (ex.files,)
         * 
         * 
         * PRIVATE SERVER OPTIONS
         *  password
         *  forget server on leave
         *  only allow specific IP's to join
         */

        USER.setSize(500,600);
        USER.setLayout(null);
        USER.setVisible(True);
        
        view_open_serv.setBounds(150,200,220,50);
        join_serv.setBounds(150,200,220,50);
        username.setBounds(150,200,220,50);
        key.setBounds(150,200,220,50);
        
        USER.add(view_open_serv);
        USER.add(join_serv);
        USER.add(username);
        USER.add(key);
    }
